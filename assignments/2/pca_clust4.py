# 6.2.3 & 6.4.2

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import sys
sys.path.append("../..")

import models.k_means.k_means as Km
import models.pca.pca as PCA
import models.gmm.gmm as GMM

def main():
    df = pd.read_feather('../../data/external/word-embeddings.feather')
    X = np.vstack(df['vit'].values)

    pca = PCA.PCA(n_components=6)
    pca.fit(X)
    reduced_dataset = pca.transform(X)

    km = Km.KMeans(12) #Kkmeans3
    km.fit(reduced_dataset)

    labels = km.predict(reduced_dataset)
    cost = km.getCost(reduced_dataset)
    print(f"Labels: {labels}")
    print(f"Cost: {cost}")

    # Labels: [ 9  9  2  5  8  4  9  9  4 11  8  4  8  0  7  1  0  1  6  9  9  2  2  6
    # 2 11  2  4  4  9  2  7 10  7  8  6  4  7  0  2  4  0  4  9 11  9  6  1
    # 1  6  2  9  6  9  1  3  8  9  5  4  8  3  5  9  9  4 10  8  4  6  8  8
    # 8  4  7  8  3  6 10  9  6  3  3  8  1  2  4  1 11  2  9  8  6  5  9 11
    # 1  7 11  6  0  2 10  1  4 10 11  3  2  1  4  4  0  6  7  5  4  3  2  2
    # 1 10 10  2  5  4 10  4  4  4  4  4 11  4  2 10  9  0  7  6  7  2  9  9
    # 0  7  0  6  9  6  2 10  6  4 10  1  6  9  3  8  0  5  2 11  2  8  0 10
    # 4  3 10  4  5  4  8 10  9  0  6  7  9  1 11  3  0  6 10  8  7  4  5  6
    # 9 10  7  9 10  6 10  7]
    # Cost: 314.22876181995093

    gmm = GMM.GMM(n_components=1) #Kgmm3
    gmm.fit(reduced_dataset)

    params = gmm.get_params()
    print("Means:\n", params['centers'])
    print("Covariances:\n", params['covariances'])
    print("Weights:\n", params['weights'])

    membership = gmm.get_membership()
    print("Memebership:\n", membership)

    likelihood = gmm.get_likelihood(reduced_dataset)
    print("Likelihood:\n", likelihood)

# Means:
#  [[-3.28626015e-16 -5.77315973e-17  3.33066907e-17  1.22124533e-17
#    2.38697950e-17  2.73392420e-17]]
# Covariances:
#  [[[ 2.07596984e+00  1.29931434e-14 -2.36034724e-16  5.64351531e-16
#     4.04517579e-16  7.27849769e-17]
#   [ 1.29931434e-14  9.23594192e-01 -8.66629410e-17  2.44015055e-16
#    -2.53966588e-16  9.45087934e-17]
#   [-2.36034724e-16 -8.66629410e-17  7.33892958e-01 -6.87972587e-17
#     2.31380313e-16  1.53777303e-16]
#   [ 5.64351531e-16  2.44015055e-16 -6.87972587e-17  5.74590982e-01
#    -1.89214710e-16 -1.20789942e-16]
#   [ 4.04517579e-16 -2.53966588e-16  2.31380313e-16 -1.89214710e-16
#     4.72615914e-01 -1.21135274e-16]
#   [ 7.27849769e-17  9.45087934e-17  1.53777303e-16 -1.20789942e-16
#    -1.21135274e-16  4.59208766e-01]]]
# Weights:
#  [1.]
# Memebership:
#  [[1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]
#  [1.]]
# Likelihood:
#  -7.643493939458828


if __name__ == "__main__":
    main()

